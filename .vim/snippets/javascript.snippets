# Prototype
snippet proto
	${1:class_name}.prototype.${2:method_name} =
	function (${3:first_argument}) {
		${4:// body...}
	};
# Function
snippet fun
	function ${1:fn} (${2}) {${3}}
# Anonymous Function
snippet f
	function(${1}) {${2}}
# Closures
snippet (f
	(function (${1}) {
		${4:// body...}
	}(${2:$1}))${3}
snippet (fun
	(function (${1:window, document}, undefined) {
		${4:// body...}
	}(${2:$1}))${3:;}
# if
snippet if
	if (${1}) {${2}}
# if ... else
snippet ife
	if (${1}) {${2}
	} else {${3}
	}
# tertiary conditional
snippet ?
	${1} ? ${2} : ${3}
# switch
snippet sw
	switch (${1}) {
	case ${3}:
		${4}
		break;${5}
	default:
		${2}
		break;
	}
# case
snippet case
	case '${1}':
		${2}
		break;
	${3}
# for (...) {...}
snippet for
	for (${2:i} = 0; $2 < ${1:Things}.length; $2${3:++}) {
		${4:$1[$2]}
	}
# for (...) {...} (Improved Native For-Loop)
snippet forr
	for (${2:i} = ${1:Things}.length - 1; $2 >= 0; $2${3:--}) {
		${4:$1[$2]}
	}
# while (...) {...}
snippet wh
	while (${1}) {
		${2}
	}
# do...while
snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */});
# Object Method
snippet :f
	${1}: function (${2}) {
		${4}
	}${3:,}
# setInterval function
snippet int
	setInterval(${2}, ${1:50});
# setTimeout function
snippet time
	setTimeout(${2}, ${1:50});
# Get Element
snippet $$
	getElementBy${1:Id}('${2}')${3}
# Get Elements
snippet $
	getElementsBy${1:TagName}('${2}')${3}
snippet cl
	console.log(${1});
